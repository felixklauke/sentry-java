public final class io/sentry/apollo3/SentryApollo3HttpInterceptor : com/apollographql/apollo3/network/http/HttpInterceptor {
	public static final field Companion Lio/sentry/apollo3/SentryApollo3HttpInterceptor$Companion;
	public static final field SENTRY_APOLLO_3_OPERATION_NAME Ljava/lang/String;
	public static final field SENTRY_APOLLO_3_OPERATION_TYPE Ljava/lang/String;
	public static final field SENTRY_APOLLO_3_VARIABLES Ljava/lang/String;
	public fun <init> ()V
	public fun <init> (Lio/sentry/IHub;)V
	public fun <init> (Lio/sentry/IHub;Lio/sentry/apollo3/SentryApollo3HttpInterceptor$BeforeSpanCallback;)V
	public synthetic fun <init> (Lio/sentry/IHub;Lio/sentry/apollo3/SentryApollo3HttpInterceptor$BeforeSpanCallback;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun dispose ()V
	public fun intercept (Lcom/apollographql/apollo3/api/http/HttpRequest;Lcom/apollographql/apollo3/network/http/HttpInterceptorChain;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class io/sentry/apollo3/SentryApollo3HttpInterceptor$BeforeSpanCallback {
	public abstract fun execute (Lio/sentry/ISpan;Lcom/apollographql/apollo3/api/http/HttpRequest;Lcom/apollographql/apollo3/api/http/HttpResponse;)Lio/sentry/ISpan;
}

public final class io/sentry/apollo3/SentryApollo3HttpInterceptor$Companion {
}

public final class io/sentry/apollo3/SentryApollo3RequestComposer : com/apollographql/apollo3/api/http/HttpRequestComposer {
	public fun <init> (Ljava/lang/String;)V
	public fun compose (Lcom/apollographql/apollo3/api/ApolloRequest;)Lcom/apollographql/apollo3/api/http/HttpRequest;
}

